// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using car_rentals_project.Models;

namespace car_rentals_project.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220930010008_AddTable")]
    partial class AddTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("car_rentals_project.Models.Automobile", b =>
                {
                    b.Property<int>("AutomobileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price_per_day")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("models")
                        .HasColumnType("TEXT");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("AutomobileId");

                    b.ToTable("Automobile");
                });

            modelBuilder.Entity("car_rentals_project.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("car_rentals_project.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutomobileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("End_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Total_Days")
                        .HasColumnType("TEXT");

                    b.Property<float>("Total_Price")
                        .HasColumnType("REAL");

                    b.Property<int>("number")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("AutomobileId");

                    b.HasIndex("ClientId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("car_rentals_project.Models.Order", b =>
                {
                    b.HasOne("car_rentals_project.Models.Automobile", "Automobile")
                        .WithMany()
                        .HasForeignKey("AutomobileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("car_rentals_project.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automobile");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
